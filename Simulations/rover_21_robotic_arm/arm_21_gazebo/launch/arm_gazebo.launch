<launch>
    <include file="$(find multimaster_launch)/launch/multimaster_gazebo_robot.launch"> <!-- Alt yürür için gerken multimaster node-->
        <arg name="robot_namespace" value="rover_21_description"/>
      </include>
<!-- launch empty world -->
<include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="paused" value="true"/>
</include>
<!--include file="$(find dunya1)/launch/WIP.launch"/--> <!-- launch custom world if you want custom world un comment that line-->

<!-- send urdf to the parameter server -->
<param name="robot_description" command="xacro --inorder $(find arm_21_gazebo)/urdf/arm_21_gazebo.urdf.xacro"/>
<rosparam file="$(find arm_21_gazebo)/config/ros_control_params.yaml" command="load"/> <!-- load arm pid gains-->

<!-- spawn robotic arm -->
<node
    name="spawn_model"
    pkg="gazebo_ros"
    type="spawn_model"
    args="-z 0.3 -urdf -param robot_description -model arm_21_gazebo"
    output="screen" />

    <rosparam command="load" file="$(find rover_21_description)/config/control.yaml" /> <!-- load rover alt yurur control params-->
    
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
        output="screen" args="rover_joint_publisher rover_velocity_controller"/>
  
     <node pkg="interactive_marker_twist_server" type="marker_server" name="twist_marker_server" output="screen"/> <!-- twist node-->
  
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" /> <!-- robot state publisher-->
  
    <node pkg="twist_mux" type="twist_mux" name="twist_mux">
      <rosparam command="load" file="$(find rover_21_description)/config/twist_mux.yaml" />
      <remap from="cmd_vel_out" to="/rover_velocity_controller/cmd_vel"/>
    </node> 
	
    <include file="$(find arm_21_gazebo)/launch/arm_rviz.launch"/> <!-- launch rviz -->
    <include file="$(find arm_control)/launch/arm_21_controllers.launch"/> <!-- load arm controllers-->
</launch>
